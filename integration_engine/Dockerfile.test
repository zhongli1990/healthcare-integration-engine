# Test stage
FROM python:3.11-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    python3-dev \
    libpq-dev \
    curl \
    libpq5 \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements files first for better layer caching
COPY integration_engine/requirements.txt .
COPY integration_engine/test-requirements.txt .
COPY integration_engine/requirements.integration.txt .

# Install Python dependencies from requirements files
RUN pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir -r test-requirements.txt && \
    pip install --no-cache-dir watchdog>=3.0.0

# Copy application code
COPY . .

# Create test data directories
RUN mkdir -p /app/tests/data/{inputs,outputs,processed,errors} \
    && chmod -R 777 /app/tests/data

# Set environment variables for testing
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV ENVIRONMENT=test
ENV TEST_DATA_DIR=/app/tests/data
ENV REDIS_URL=redis://redis-test:6379/0

# Make test scripts executable
RUN chmod +x /app/run_tests.sh

# Default command - keep container running
WORKDIR /app
CMD ["tail", "-f", "/dev/null"]
